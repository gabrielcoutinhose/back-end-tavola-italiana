services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT}:${PORT}"
    environment:
    - NODE_ENV=${NODE_ENV:-dev}
    - DEBUG=${DEBUG:-false}
    - JWT_SECRET=${JWT_SECRET:-your_default_secret}
    - BASE_URL=${BASE_URL:-http://localhost:3001}
    - HOST=${HOST:-localhost}
    - PORT=${PORT:-3001}
    - POSTGRES_HOST=${POSTGRES_HOST:-localhost}
    - POSTGRES_PORT=${POSTGRES_PORT:-5432}
    - MONGO_PORT=${MONGO_PORT:-27017}
    - MONGO_URI=${MONGO_URI:-mongodb://localhost:27017}
    - MONGO_USER=${MONGO_USER:-user}
    - MONGO_DB=${MONGO_DB:-mydb}
    - MONGO_PASSWORD=${MONGO_PASSWORD:-password}
    image: backend-tavola-italiana:v1.0.0
    container_name: backend
    networks:
      - app_network
    volumes:
      - ./data:/app/data:rw
      - ./uploads:/app/uploads:rw
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:${PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:4

    container_name: mongo
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    networks:
      - app_network
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app_network:
    driver: bridge

volumes:
  encrypted_data:
    driver: local
    driver_opts:
      type: "ext4"
      o: "encrypt"
  postgres_data:
  mongo_data:
  backend:
