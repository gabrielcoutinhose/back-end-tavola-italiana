services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    ports:
      - "${PORT}:${PORT}"
    environment:
      YARN_CACHE_FOLDER: /app/.yarn-cache
      YARN_RC_FILE: /app/.yarnrc
      NODE_ENV: ${NODE_ENV}
      DEBUG: ${DEBUG}
      JWT_SECRET: ${JWT_SECRET}
      FLUENTBIT_PORT: ${FLUENTBIT_PORT}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_URI: ${MONGO_URI}
      MONGO_USER: ${MONGO_USER}
      MONGO_DB: ${MONGO_DB}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      PORT: ${PORT}
    image: backend-tavola-italiana:v1.0.0
    networks:
      - app_network
    volumes:
      - ./data:/app/data:rw
      - ./logs:/var/log:rw
    depends_on:
      - postgres
      - mongo
      - fluent-bit
    restart: unless-stopped

  postgres:
    image: postgres:13
    networks:
      - app_network
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo:
    image: mongo:4
    networks:
      - app_network
    container_name: mongo
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - mongo_data:/data/db

  fluent-bit:
    image: fluent/fluent-bit:latest
    networks:
      - app_network
    volumes:
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
      - ./fluent-bit-config:/fluent-bit/etc:rw
      - ./logs:/var/log:rw
    environment:
      FLUENTBIT_CONF=/fluent-bit/etc/fluent-bit.conf
      FLUENTBIT_LOG_LEVEL=info
    ports:
      - "${FLUENTBIT_PORT}:${FLUENTBIT_PORT}"
    restart: unless-stopped

networks:
  app_network:
    driver: bridge

volumes:
  encrypted_data:
    driver: local
    driver_opts:
      type: "ext4"
      o: "encrypt"
  postgres_data:
  mongo_data:
  fluent-bit:
  app:
